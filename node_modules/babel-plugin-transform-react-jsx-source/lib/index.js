
/**
* This adds {fileName, lineNumber} annotations to React component definitions
* and to jsx tag literals.
*
*
* == JSX Literals ==
*
* <sometag />
*
* becomes:
*
* <sometag __source={{fileName: 'this/file.js', lineNumber: 10}}/>
*/

"use strict";

var _Object$keys = require("babel-runtime/core-js/object/keys")["default"];

var _interopRequireDefault = require("babel-runtime/helpers/interop-require-default")["default"];

exports.__esModule = true;

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var TRACE_ID = "__source";

exports["default"] = function (_ref) {
  var t = _ref.types;

  function objectToAst(object) {
    var properties = _Object$keys(object).map(function (attr) {
      var value = undefined;
      switch (typeof object[attr]) {
        case "number":
          value = t.numericLiteral(object[attr]);break;
        default:
          value = t.stringLiteral(object[attr].toString());
      }
      return t.objectProperty(t.identifier(attr), value);
    });
    return t.objectExpression(properties);
  }

  function makeTrace(fileName, lineNumber) {
    return objectToAst({
      fileName: fileName,
      lineNumber: lineNumber
    });
  }

  var visitor = {
    JSXOpeningElement: function JSXOpeningElement(node, state) {
      var id = t.jSXIdentifier(TRACE_ID);
      var fileName = state.file.log.filename !== "unknown" ? _path2["default"].relative(__dirname, state.file.log.filename) : null;
      var trace = makeTrace(fileName, node.container.openingElement.loc.start.line);

      node.container.openingElement.attributes.push(t.jSXAttribute(id, t.jSXExpressionContainer(trace)));
    }
  };

  return {
    visitor: visitor
  };
};

module.exports = exports["default"];